import os
import time
import textwrap

import requests
import telegram

from dotenv import load_dotenv


def prepare_message(response: dict) -> str:
    message = ''

    for lesson in response['new_attempts']:
        lesson_title = lesson['lesson_title']
        lesson_url = lesson['lesson_url']

        if lesson['is_negative']:
            approve_lesson = '–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å –ø–æ–ø—Ä–æ—Å–∏–ª –≤–Ω–µ—Å—Ç–∏ –ø—Ä–∞–≤–∫–∏ –≤ –ø—Ä–æ–µ–∫—Ç.'
        else:
            approve_lesson = '–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å –ø—Ä–∏–Ω—è–ª —Ä–∞–±–æ—Ç—É!'

        message += f"""
                    <b>–ù–∞–∑–≤–∞–Ω–∏–µ —É—Ä–æ–∫–∞</b>: {lesson_title}
                    {approve_lesson}
                    <b>–°—Å—ã–ª–∫–∞ –Ω–∞ —É—Ä–æ–∫</b>: {lesson_url}
                    """

    return textwrap.dedent(message)


def send_message(bot: telegram.Bot, chat_id: str, reviews_info: dict) -> None:
    if len(reviews_info['new_attempts']) > 1:
        message = '–£ –≤–∞—Å –ø–æ—è–≤–∏–ª–∏—Å—å —Ä–µ–≤—å—é –ø–æ —Å–ª–µ–¥—É—é—â–∏–º —É—Ä–æ–∫–∞–º:'
    else:
        message = 'üöÄ –ù–æ–≤–æ–µ —Ä–µ–≤—å—é!'

    message += prepare_message(reviews_info)
    bot.send_message(text=message, chat_id=chat_id,
                     parse_mode=telegram.ParseMode.HTML)


if __name__ == '__main__':
    load_dotenv()
    devman_token = os.getenv('DEVMAN_TOKEN')
    telegram_token = os.getenv('TELEGRAM_TOKEN')
    telegram_chat_id = os.getenv('TELEGRAM_CHAT_ID')
    bot = telegram.Bot(telegram_token)
    timestamp = ''
    url = f'https://dvmn.org/api/long_polling/'
    headers = {
        'Authorization': f'Token {devman_token}',
    }

    while True:
        params = {
            'timestamp': timestamp
        }
        response_tries = 0

        try:
            response = requests.get(url=url, headers=headers, params=params)
            response.raise_for_status()
        except requests.exceptions.ReadTimeout:
            continue
        except requests.exceptions.ConnectionError:
            response_tries += 1
            if response_tries >= 5:
                time.sleep(60)
            continue

        reviews_info = response.json()
        if reviews_info['status'] == 'timeout':
            timestamp = reviews_info['timestamp_to_request']
        else:
            timestamp = reviews_info['last_attempt_timestamp']
            send_message(bot, telegram_chat_id, reviews_info)
